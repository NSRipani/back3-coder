paths:
  /api/users/register/:
    post:
      tags:
        - Users sessions
      summary: Register a new user
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/createUser'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                    example: success
                  _id:
                    type: string
                    description: User ID
                    example: 5f7f7b7b7b7b7b7b7b7b7b7
        '400':
          description: Invalid status value

  /api/users/login/:
    post:
      tags:
        - Users sessions
      summary: User login
      description: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/loginUser'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                    example: success
                  token:
                    type: string
                    description: Authentication token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Invalid status value

  /api/users/current/:
    get:
      tags:
        - Users sessions
      summary: Get current user
      description: Get current user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                    example: success
                  users:
                    $ref: '#/components/schemas/Users'
        '400':
          description: Invalid status value

components:
  schemas:
    Users:
      type: object
      properties:
        _id:
          type: ObjectId
          description: User ID
        fisrt_name:
          type: string
          description: User first name
        last_name:
          type: string
          description: User last name
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
        role:
          type: string
          description: User role
        pets:
          type: array
          description: User pets
        __v:
          type: integer
          description: User version
      example:
        _id: 5f7b1b7b7b7b7b7b7b7b7b7b
        fisrt_name: John
        last_name: Doe
        email: johndoe@gmail.com
        password: johndoe
        role: admin
        pets: []
        __v: 0

requestBodies:
  createUser:
    type: object
    properties:
      first_name:
        type: string
        description: User first name
      last_name:
        type: string
        description: User last name
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
    example:
      first_name: John
      last_name: Doe
      email: johndoe@gmail.com
      password: johndoe

  loginUser:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
    example:
      email: johndoe@gmail.com
      password: johndoe